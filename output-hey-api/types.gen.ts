// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: `${string}://swagger.json` | (string & {});
};

export type BulkVoyageCreateDto = {
    pol?: string | null;
    pod?: string | null;
    vesselId?: string | null;
    isSpaceCharter?: boolean;
    isStandby?: boolean | null;
    isNonBookableLeg?: boolean;
    operator?: string | null;
    scheduledDepartureLocal?: string;
    terminalPol?: string | null;
    terminalPod?: string | null;
    voyageType?: 'RoRo' | 'RoPax' | 'Pax';
    customer?: 'Bulk' | 'Proj' | 'Seac';
    journeyLength?: number | null;
};

export type BulkVoyageResponseDto = {
    jobId: string | null;
    status: 'Processing' | 'Failed' | 'Conflicted' | 'Completed';
};

export type BulkVoyageUpdateDto = {
    pol?: string | null;
    pod?: string | null;
    vesselId?: string | null;
    isSpaceCharter?: boolean;
    isStandby?: boolean | null;
    isNonBookableLeg?: boolean;
    operator?: string | null;
    voyageId?: string | null;
    scheduledDepartureLocal?: string | null;
    actualDepartureLocal?: string | null;
    actualArrivalLocal?: string | null;
    version?: string | null;
    terminalPol?: string | null;
    terminalPod?: string | null;
    journeyLength?: number | null;
};

export type EnrichedVoyageResponseDto = {
    voyageId?: string | null;
    links?: Array<LinkDto> | null;
    pol?: string | null;
    polName?: string | null;
    pod?: string | null;
    podName?: string | null;
    vesselId?: string | null;
    vesselName?: string | null;
    scheduledDepartureLocal?: string;
    actualDepartureLocal?: string | null;
    estimatedArrivalLocal?: string;
    actualArrivalLocal?: string | null;
    version?: string | null;
    isSpaceCharter?: boolean;
    operator?: string | null;
    terminalPol?: string | null;
    terminalPolName?: string | null;
    terminalPod?: string | null;
    terminalPodName?: string | null;
    status?: 'Standby' | 'Scheduled' | 'Departed' | 'Arrived' | 'Cancelled';
    voyageType?: 'RoRo' | 'RoPax' | 'Pax';
    customer?: string | null;
    isNonBookableLeg?: boolean;
};

export type JobVoyageResponseDto = {
    voyageId?: string | null;
    jobItemId?: string | null;
    jobItemStatus?: 'Processing' | 'Failed' | 'Conflicted' | 'Completed';
    polName?: string | null;
    podName?: string | null;
    scheduledDepartureLocal?: string | null;
    actualDepartureLocal?: string | null;
    estimatedArrivalLocal?: string | null;
    actualArrivalLocal?: string | null;
    vesselId?: string | null;
    vesselName?: string | null;
    operator?: string | null;
    terminalPol?: string | null;
    terminalPolName?: string | null;
    terminalPod?: string | null;
    terminalPodName?: string | null;
    voyageStatus?: 'Standby' | 'Scheduled' | 'Departed' | 'Arrived' | 'Cancelled';
};

export type LinkDto = {
    href: string | null;
    rel: string | null;
    method: string | null;
};

export type Location = {
    unLoCode?: string | null;
    country?: string | null;
    countryAlphaCode?: string | null;
    name?: string | null;
    timezone?: string | null;
    terminals?: Array<Terminal> | null;
    canVesselSwap?: boolean;
    canChangeScheduledDepartureDate?: boolean;
};

export type ProblemDetails = {
    type?: string | null;
    title?: string | null;
    status?: number | null;
    detail?: string | null;
    instance?: string | null;
    [key: string]: unknown | string | null | string | null | number | null | string | null | string | null | undefined;
};

export type Route = {
    routeId?: string | null;
    pol?: string | null;
    polName?: string | null;
    pod?: string | null;
    podName?: string | null;
    businessUnit?: 'NorthSea' | 'NorthSeaBarge' | 'NorthSeaContainer' | 'Channel' | 'Baltics' | 'Mediterranean' | 'StraitOfGibraltar';
    customers?: Array<string> | null;
    canChangeScheduledDepartureDate?: boolean;
};

export type Terminal = {
    id?: string | null;
    name?: string | null;
    unLoCode?: string | null;
    isDefault?: boolean;
};

export type VoyageCreateDto = {
    pol?: string | null;
    pod?: string | null;
    vesselId?: string | null;
    isSpaceCharter?: boolean;
    isStandby?: boolean | null;
    isNonBookableLeg?: boolean;
    operator?: string | null;
    scheduledDepartureLocal?: string;
    terminalPol?: string | null;
    terminalPod?: string | null;
    voyageType?: 'RoRo' | 'RoPax' | 'Pax';
    customer?: 'Bulk' | 'Proj' | 'Seac';
    estimatedArrivalLocal?: string | null;
};

export type VoyageResponseDto = {
    voyageId?: string | null;
    links?: Array<LinkDto> | null;
    pol?: string | null;
    pod?: string | null;
    vesselId?: string | null;
    scheduledDeparture?: string;
    actualDeparture?: string | null;
    estimatedArrival?: string;
    actualArrival?: string | null;
    scheduledDepartureLocal?: string;
    actualDepartureLocal?: string | null;
    estimatedArrivalLocal?: string;
    actualArrivalLocal?: string | null;
    version?: string | null;
    isSpaceCharter?: boolean;
    operator?: string | null;
    terminalPol?: string | null;
    terminalPod?: string | null;
    status?: 'Standby' | 'Scheduled' | 'Departed' | 'Arrived' | 'Cancelled';
    voyageType?: 'RoRo' | 'RoPax' | 'Pax';
    creationDate?: string | null;
    customer?: string | null;
    isNonBookableLeg?: boolean;
};

export type VoyageUpdateDto = {
    pol?: string | null;
    pod?: string | null;
    vesselId?: string | null;
    isSpaceCharter?: boolean;
    isStandby?: boolean | null;
    isNonBookableLeg?: boolean;
    operator?: string | null;
    voyageId?: string | null;
    scheduledDepartureLocal?: string | null;
    actualDepartureLocal?: string | null;
    actualArrivalLocal?: string | null;
    version?: string | null;
    terminalPol?: string | null;
    terminalPod?: string | null;
    estimatedArrivalLocal?: string | null;
};

export type PostApiV5VoyageBulkCreateData = {
    body?: Array<BulkVoyageCreateDto>;
    path?: never;
    query?: {
        userId?: string;
    };
    url: '/api/v5/Voyage/Bulk/Create';
};

export type PostApiV5VoyageBulkCreateErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type PostApiV5VoyageBulkCreateError = PostApiV5VoyageBulkCreateErrors[keyof PostApiV5VoyageBulkCreateErrors];

export type PostApiV5VoyageBulkCreateResponses = {
    /**
     * Accepted
     */
    202: BulkVoyageResponseDto;
};

export type PostApiV5VoyageBulkCreateResponse = PostApiV5VoyageBulkCreateResponses[keyof PostApiV5VoyageBulkCreateResponses];

export type PostApiV5VoyageBulkUpdateData = {
    body?: Array<BulkVoyageUpdateDto>;
    path?: never;
    query?: {
        userId?: string;
    };
    url: '/api/v5/Voyage/Bulk/Update';
};

export type PostApiV5VoyageBulkUpdateErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type PostApiV5VoyageBulkUpdateError = PostApiV5VoyageBulkUpdateErrors[keyof PostApiV5VoyageBulkUpdateErrors];

export type PostApiV5VoyageBulkUpdateResponses = {
    /**
     * Accepted
     */
    202: BulkVoyageResponseDto;
};

export type PostApiV5VoyageBulkUpdateResponse = PostApiV5VoyageBulkUpdateResponses[keyof PostApiV5VoyageBulkUpdateResponses];

export type PostApiV5VoyageBulkCancelData = {
    body?: Array<string>;
    path?: never;
    query?: {
        userId?: string;
    };
    url: '/api/v5/Voyage/Bulk/Cancel';
};

export type PostApiV5VoyageBulkCancelErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type PostApiV5VoyageBulkCancelError = PostApiV5VoyageBulkCancelErrors[keyof PostApiV5VoyageBulkCancelErrors];

export type PostApiV5VoyageBulkCancelResponses = {
    /**
     * Accepted
     */
    202: BulkVoyageResponseDto;
};

export type PostApiV5VoyageBulkCancelResponse = PostApiV5VoyageBulkCancelResponses[keyof PostApiV5VoyageBulkCancelResponses];

export type GetApiV5JobByJobIdData = {
    body?: never;
    path: {
        jobId: string;
    };
    query?: never;
    url: '/api/v5/Job/{jobId}';
};

export type GetApiV5JobByJobIdErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type GetApiV5JobByJobIdError = GetApiV5JobByJobIdErrors[keyof GetApiV5JobByJobIdErrors];

export type GetApiV5JobByJobIdResponses = {
    /**
     * OK
     */
    200: BulkVoyageResponseDto;
};

export type GetApiV5JobByJobIdResponse = GetApiV5JobByJobIdResponses[keyof GetApiV5JobByJobIdResponses];

export type GetApiV5JobData = {
    body?: never;
    path?: never;
    query?: {
        userId?: string;
        startDate?: string;
        endDate?: string;
    };
    url: '/api/v5/Job';
};

export type GetApiV5JobErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type GetApiV5JobError = GetApiV5JobErrors[keyof GetApiV5JobErrors];

export type GetApiV5JobResponses = {
    /**
     * OK
     */
    200: BulkVoyageResponseDto;
};

export type GetApiV5JobResponse = GetApiV5JobResponses[keyof GetApiV5JobResponses];

export type GetApiV5JobByJobIdVoyagesData = {
    body?: never;
    path: {
        jobId: string;
    };
    query?: never;
    url: '/api/v5/Job/{jobId}/Voyages';
};

export type GetApiV5JobByJobIdVoyagesErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type GetApiV5JobByJobIdVoyagesError = GetApiV5JobByJobIdVoyagesErrors[keyof GetApiV5JobByJobIdVoyagesErrors];

export type GetApiV5JobByJobIdVoyagesResponses = {
    /**
     * OK
     */
    200: Array<JobVoyageResponseDto>;
};

export type GetApiV5JobByJobIdVoyagesResponse = GetApiV5JobByJobIdVoyagesResponses[keyof GetApiV5JobByJobIdVoyagesResponses];

export type DeleteApiV5JobByJobIdJobItemIdsData = {
    body?: never;
    path: {
        jobId: string;
    };
    query: {
        jobItemIds: Array<string>;
    };
    url: '/api/v5/Job/{jobId}/JobItemIds';
};

export type DeleteApiV5JobByJobIdJobItemIdsErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type DeleteApiV5JobByJobIdJobItemIdsError = DeleteApiV5JobByJobIdJobItemIdsErrors[keyof DeleteApiV5JobByJobIdJobItemIdsErrors];

export type DeleteApiV5JobByJobIdJobItemIdsResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteApiV5JobByJobIdJobItemIdsResponse = DeleteApiV5JobByJobIdJobItemIdsResponses[keyof DeleteApiV5JobByJobIdJobItemIdsResponses];

export type GetApiV5LocationsPortByLocationIdData = {
    body?: never;
    path: {
        locationId: string;
    };
    query?: never;
    url: '/api/v5/Locations/Port/{locationId}';
};

export type GetApiV5LocationsPortByLocationIdErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type GetApiV5LocationsPortByLocationIdError = GetApiV5LocationsPortByLocationIdErrors[keyof GetApiV5LocationsPortByLocationIdErrors];

export type GetApiV5LocationsPortByLocationIdResponses = {
    /**
     * OK
     */
    200: Location;
};

export type GetApiV5LocationsPortByLocationIdResponse = GetApiV5LocationsPortByLocationIdResponses[keyof GetApiV5LocationsPortByLocationIdResponses];

export type GetApiV5LocationsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v5/Locations';
};

export type GetApiV5LocationsErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type GetApiV5LocationsError = GetApiV5LocationsErrors[keyof GetApiV5LocationsErrors];

export type GetApiV5LocationsResponses = {
    /**
     * OK
     */
    200: Array<Location>;
};

export type GetApiV5LocationsResponse = GetApiV5LocationsResponses[keyof GetApiV5LocationsResponses];

export type GetApiV5LocationsRoutesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v5/Locations/Routes';
};

export type GetApiV5LocationsRoutesErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type GetApiV5LocationsRoutesError = GetApiV5LocationsRoutesErrors[keyof GetApiV5LocationsRoutesErrors];

export type GetApiV5LocationsRoutesResponses = {
    /**
     * OK
     */
    200: Array<Route>;
};

export type GetApiV5LocationsRoutesResponse = GetApiV5LocationsRoutesResponses[keyof GetApiV5LocationsRoutesResponses];

export type GetApiV5VoyageByVoyageIdData = {
    body?: never;
    path: {
        voyageId: string;
    };
    query?: never;
    url: '/api/v5/Voyage/{voyageId}';
};

export type GetApiV5VoyageByVoyageIdErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type GetApiV5VoyageByVoyageIdError = GetApiV5VoyageByVoyageIdErrors[keyof GetApiV5VoyageByVoyageIdErrors];

export type GetApiV5VoyageByVoyageIdResponses = {
    /**
     * OK
     */
    200: VoyageResponseDto;
};

export type GetApiV5VoyageByVoyageIdResponse = GetApiV5VoyageByVoyageIdResponses[keyof GetApiV5VoyageByVoyageIdResponses];

export type PutApiV5VoyageByVoyageIdData = {
    body?: VoyageUpdateDto;
    path: {
        voyageId: string;
    };
    query: {
        userId: string;
    };
    url: '/api/v5/Voyage/{voyageId}';
};

export type PutApiV5VoyageByVoyageIdErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Conflict
     */
    409: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type PutApiV5VoyageByVoyageIdError = PutApiV5VoyageByVoyageIdErrors[keyof PutApiV5VoyageByVoyageIdErrors];

export type PutApiV5VoyageByVoyageIdResponses = {
    /**
     * OK
     */
    200: VoyageResponseDto;
};

export type PutApiV5VoyageByVoyageIdResponse = PutApiV5VoyageByVoyageIdResponses[keyof PutApiV5VoyageByVoyageIdResponses];

export type GetApiV5VoyageData = {
    body?: never;
    path?: never;
    query?: {
        routeId?: string;
        scheduledDepartureFrom?: string;
        scheduledDepartureTo?: string;
    };
    url: '/api/v5/Voyage';
};

export type GetApiV5VoyageErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type GetApiV5VoyageError = GetApiV5VoyageErrors[keyof GetApiV5VoyageErrors];

export type GetApiV5VoyageResponses = {
    /**
     * OK
     */
    200: VoyageResponseDto;
};

export type GetApiV5VoyageResponse = GetApiV5VoyageResponses[keyof GetApiV5VoyageResponses];

export type PostApiV5VoyageData = {
    body?: VoyageCreateDto;
    path?: never;
    query: {
        userId: string;
    };
    url: '/api/v5/Voyage';
};

export type PostApiV5VoyageErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Conflict
     */
    409: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type PostApiV5VoyageError = PostApiV5VoyageErrors[keyof PostApiV5VoyageErrors];

export type PostApiV5VoyageResponses = {
    /**
     * Created
     */
    201: VoyageResponseDto;
};

export type PostApiV5VoyageResponse = PostApiV5VoyageResponses[keyof PostApiV5VoyageResponses];

export type PutApiV5VoyageByVoyageIdCancelData = {
    body?: never;
    path: {
        voyageId: string;
    };
    query: {
        userId: string;
    };
    url: '/api/v5/Voyage/{voyageId}/Cancel';
};

export type PutApiV5VoyageByVoyageIdCancelErrors = {
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type PutApiV5VoyageByVoyageIdCancelError = PutApiV5VoyageByVoyageIdCancelErrors[keyof PutApiV5VoyageByVoyageIdCancelErrors];

export type PutApiV5VoyageByVoyageIdCancelResponses = {
    /**
     * No Content
     */
    204: void;
};

export type PutApiV5VoyageByVoyageIdCancelResponse = PutApiV5VoyageByVoyageIdCancelResponses[keyof PutApiV5VoyageByVoyageIdCancelResponses];

export type GetApiV5VoyageQueryByVoyageIdEnrichedData = {
    body?: never;
    path: {
        voyageId: string;
    };
    query?: never;
    url: '/api/v5/VoyageQuery/{voyageId}/Enriched';
};

export type GetApiV5VoyageQueryByVoyageIdEnrichedErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type GetApiV5VoyageQueryByVoyageIdEnrichedError = GetApiV5VoyageQueryByVoyageIdEnrichedErrors[keyof GetApiV5VoyageQueryByVoyageIdEnrichedErrors];

export type GetApiV5VoyageQueryByVoyageIdEnrichedResponses = {
    /**
     * OK
     */
    200: EnrichedVoyageResponseDto;
};

export type GetApiV5VoyageQueryByVoyageIdEnrichedResponse = GetApiV5VoyageQueryByVoyageIdEnrichedResponses[keyof GetApiV5VoyageQueryByVoyageIdEnrichedResponses];

export type GetApiV5VoyageQueryData = {
    body?: never;
    path?: never;
    query?: {
        startDate?: string;
        endDate?: string;
    };
    url: '/api/v5/VoyageQuery';
};

export type GetApiV5VoyageQueryErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: unknown;
};

export type GetApiV5VoyageQueryError = GetApiV5VoyageQueryErrors[keyof GetApiV5VoyageQueryErrors];

export type GetApiV5VoyageQueryResponses = {
    /**
     * OK
     */
    200: Array<EnrichedVoyageResponseDto>;
};

export type GetApiV5VoyageQueryResponse = GetApiV5VoyageQueryResponses[keyof GetApiV5VoyageQueryResponses];

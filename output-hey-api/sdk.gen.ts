// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as Options2, TDataShape } from './client';
import { client } from './client.gen';
import type { DeleteApiV5JobByJobIdJobItemIdsData, DeleteApiV5JobByJobIdJobItemIdsErrors, DeleteApiV5JobByJobIdJobItemIdsResponses, GetApiV5JobByJobIdData, GetApiV5JobByJobIdErrors, GetApiV5JobByJobIdResponses, GetApiV5JobByJobIdVoyagesData, GetApiV5JobByJobIdVoyagesErrors, GetApiV5JobByJobIdVoyagesResponses, GetApiV5JobData, GetApiV5JobErrors, GetApiV5JobResponses, GetApiV5LocationsData, GetApiV5LocationsErrors, GetApiV5LocationsPortByLocationIdData, GetApiV5LocationsPortByLocationIdErrors, GetApiV5LocationsPortByLocationIdResponses, GetApiV5LocationsResponses, GetApiV5LocationsRoutesData, GetApiV5LocationsRoutesErrors, GetApiV5LocationsRoutesResponses, GetApiV5VoyageByVoyageIdData, GetApiV5VoyageByVoyageIdErrors, GetApiV5VoyageByVoyageIdResponses, GetApiV5VoyageData, GetApiV5VoyageErrors, GetApiV5VoyageQueryByVoyageIdEnrichedData, GetApiV5VoyageQueryByVoyageIdEnrichedErrors, GetApiV5VoyageQueryByVoyageIdEnrichedResponses, GetApiV5VoyageQueryData, GetApiV5VoyageQueryErrors, GetApiV5VoyageQueryResponses, GetApiV5VoyageResponses, PostApiV5VoyageBulkCancelData, PostApiV5VoyageBulkCancelErrors, PostApiV5VoyageBulkCancelResponses, PostApiV5VoyageBulkCreateData, PostApiV5VoyageBulkCreateErrors, PostApiV5VoyageBulkCreateResponses, PostApiV5VoyageBulkUpdateData, PostApiV5VoyageBulkUpdateErrors, PostApiV5VoyageBulkUpdateResponses, PostApiV5VoyageData, PostApiV5VoyageErrors, PostApiV5VoyageResponses, PutApiV5VoyageByVoyageIdCancelData, PutApiV5VoyageByVoyageIdCancelErrors, PutApiV5VoyageByVoyageIdCancelResponses, PutApiV5VoyageByVoyageIdData, PutApiV5VoyageByVoyageIdErrors, PutApiV5VoyageByVoyageIdResponses } from './types.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = Options2<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const postApiV5VoyageBulkCreate = <ThrowOnError extends boolean = false>(options?: Options<PostApiV5VoyageBulkCreateData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiV5VoyageBulkCreateResponses, PostApiV5VoyageBulkCreateErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/Voyage/Bulk/Create',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postApiV5VoyageBulkUpdate = <ThrowOnError extends boolean = false>(options?: Options<PostApiV5VoyageBulkUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiV5VoyageBulkUpdateResponses, PostApiV5VoyageBulkUpdateErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/Voyage/Bulk/Update',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postApiV5VoyageBulkCancel = <ThrowOnError extends boolean = false>(options?: Options<PostApiV5VoyageBulkCancelData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiV5VoyageBulkCancelResponses, PostApiV5VoyageBulkCancelErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/Voyage/Bulk/Cancel',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getApiV5JobByJobId = <ThrowOnError extends boolean = false>(options: Options<GetApiV5JobByJobIdData, ThrowOnError>) => {
    return (options.client ?? client).get<GetApiV5JobByJobIdResponses, GetApiV5JobByJobIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/Job/{jobId}',
        ...options
    });
};

export const getApiV5Job = <ThrowOnError extends boolean = false>(options?: Options<GetApiV5JobData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiV5JobResponses, GetApiV5JobErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/Job',
        ...options
    });
};

export const getApiV5JobByJobIdVoyages = <ThrowOnError extends boolean = false>(options: Options<GetApiV5JobByJobIdVoyagesData, ThrowOnError>) => {
    return (options.client ?? client).get<GetApiV5JobByJobIdVoyagesResponses, GetApiV5JobByJobIdVoyagesErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/Job/{jobId}/Voyages',
        ...options
    });
};

export const deleteApiV5JobByJobIdJobItemIds = <ThrowOnError extends boolean = false>(options: Options<DeleteApiV5JobByJobIdJobItemIdsData, ThrowOnError>) => {
    return (options.client ?? client).delete<DeleteApiV5JobByJobIdJobItemIdsResponses, DeleteApiV5JobByJobIdJobItemIdsErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/Job/{jobId}/JobItemIds',
        ...options
    });
};

export const getApiV5LocationsPortByLocationId = <ThrowOnError extends boolean = false>(options: Options<GetApiV5LocationsPortByLocationIdData, ThrowOnError>) => {
    return (options.client ?? client).get<GetApiV5LocationsPortByLocationIdResponses, GetApiV5LocationsPortByLocationIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/Locations/Port/{locationId}',
        ...options
    });
};

export const getApiV5Locations = <ThrowOnError extends boolean = false>(options?: Options<GetApiV5LocationsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiV5LocationsResponses, GetApiV5LocationsErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/Locations',
        ...options
    });
};

export const getApiV5LocationsRoutes = <ThrowOnError extends boolean = false>(options?: Options<GetApiV5LocationsRoutesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiV5LocationsRoutesResponses, GetApiV5LocationsRoutesErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/Locations/Routes',
        ...options
    });
};

export const getApiV5VoyageByVoyageId = <ThrowOnError extends boolean = false>(options: Options<GetApiV5VoyageByVoyageIdData, ThrowOnError>) => {
    return (options.client ?? client).get<GetApiV5VoyageByVoyageIdResponses, GetApiV5VoyageByVoyageIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/Voyage/{voyageId}',
        ...options
    });
};

export const putApiV5VoyageByVoyageId = <ThrowOnError extends boolean = false>(options: Options<PutApiV5VoyageByVoyageIdData, ThrowOnError>) => {
    return (options.client ?? client).put<PutApiV5VoyageByVoyageIdResponses, PutApiV5VoyageByVoyageIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/Voyage/{voyageId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiV5Voyage = <ThrowOnError extends boolean = false>(options?: Options<GetApiV5VoyageData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiV5VoyageResponses, GetApiV5VoyageErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/Voyage',
        ...options
    });
};

export const postApiV5Voyage = <ThrowOnError extends boolean = false>(options: Options<PostApiV5VoyageData, ThrowOnError>) => {
    return (options.client ?? client).post<PostApiV5VoyageResponses, PostApiV5VoyageErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/Voyage',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putApiV5VoyageByVoyageIdCancel = <ThrowOnError extends boolean = false>(options: Options<PutApiV5VoyageByVoyageIdCancelData, ThrowOnError>) => {
    return (options.client ?? client).put<PutApiV5VoyageByVoyageIdCancelResponses, PutApiV5VoyageByVoyageIdCancelErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/Voyage/{voyageId}/Cancel',
        ...options
    });
};

export const getApiV5VoyageQueryByVoyageIdEnriched = <ThrowOnError extends boolean = false>(options: Options<GetApiV5VoyageQueryByVoyageIdEnrichedData, ThrowOnError>) => {
    return (options.client ?? client).get<GetApiV5VoyageQueryByVoyageIdEnrichedResponses, GetApiV5VoyageQueryByVoyageIdEnrichedErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/VoyageQuery/{voyageId}/Enriched',
        ...options
    });
};

export const getApiV5VoyageQuery = <ThrowOnError extends boolean = false>(options?: Options<GetApiV5VoyageQueryData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiV5VoyageQueryResponses, GetApiV5VoyageQueryErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v5/VoyageQuery',
        ...options
    });
};
